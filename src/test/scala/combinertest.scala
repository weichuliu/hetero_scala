import combiner.Combiner._
import combiner.HGraph
import common.Common.{readNet, printNet, saveNet, rangeToPair}
import collection.mutable.{Set => MSet, Map => MMap}
import org.scalatest.FunSuite

class combinerSuite extends FunSuite {
	val E = readNet("nets/hetero.net")
	val lr = Seq(187, 255, 408, 425)
	val nr = Seq(60, 60, 50)

	test("gltn gltc lgtn lgtc") {
		val g = new HGraph(E, lr, nr)
		val gltn = MMap(0-> (0, 0), 1-> (0, 1), 2-> (0, 2), 3-> (0, 3), 4-> (0, 4), 5-> (0, 5), 6-> (0, 6), 7-> (0, 7), 8-> (0, 8), 9-> (0, 9), 10-> (0, 10), 11-> (0, 11), 12-> (0, 12), 13-> (0, 13), 14-> (0, 14), 15-> (0, 15), 16-> (0, 16), 17-> (0, 17), 18-> (0, 18), 19-> (0, 19), 20-> (0, 20), 21-> (0, 21), 22-> (0, 22), 23-> (0, 23), 24-> (0, 24), 25-> (0, 25), 26-> (0, 26), 27-> (0, 27), 28-> (0, 28), 29-> (0, 29), 30-> (0, 30), 31-> (0, 31), 32-> (0, 32), 33-> (0, 33), 34-> (0, 34), 35-> (0, 35), 36-> (0, 36), 37-> (0, 37), 38-> (0, 38), 39-> (0, 39), 40-> (0, 40), 41-> (0, 41), 42-> (0, 42), 43-> (0, 43), 44-> (0, 44), 45-> (0, 45), 46-> (0, 46), 47-> (0, 47), 49-> (0, 48), 51-> (0, 49), 52-> (0, 50), 53-> (0, 51), 54-> (0, 52), 55-> (0, 53), 56-> (0, 54), 58-> (0, 55))  ::  MMap(0-> (0, 0), 1-> (0, 1), 2-> (0, 2), 3-> (0, 3), 4-> (0, 4), 5-> (0, 5), 6-> (0, 6), 7-> (0, 7), 8-> (0, 8), 9-> (0, 9), 10-> (0, 10), 11-> (0, 11), 12-> (0, 12), 13-> (0, 13), 14-> (0, 14), 15-> (0, 15), 16-> (0, 16), 18-> (0, 17), 19-> (0, 18), 20-> (0, 19), 21-> (0, 20), 22-> (0, 21), 23-> (0, 22), 24-> (0, 23), 26-> (0, 24), 27-> (0, 25), 28-> (0, 26), 29-> (0, 27), 30-> (0, 28), 31-> (0, 29), 33-> (0, 30), 35-> (0, 31), 36-> (0, 32), 37-> (0, 33), 38-> (0, 34), 39-> (0, 35), 40-> (0, 36), 42-> (0, 37), 43-> (0, 38), 44-> (0, 39), 45-> (0, 40), 46-> (0, 41), 47-> (0, 42), 48-> (0, 43), 49-> (0, 44), 50-> (0, 45), 51-> (0, 46), 52-> (0, 47), 53-> (0, 48), 54-> (0, 49), 55-> (0, 50), 56-> (0, 51), 57-> (0, 52), 58-> (0, 53), 59-> (0, 54), 60-> (1, 0), 61-> (1, 1), 62-> (1, 2), 63-> (1, 3), 64-> (1, 4), 65-> (1, 5), 66-> (1, 6), 67-> (1, 7), 68-> (1, 8), 69-> (1, 9), 70-> (1, 10), 71-> (1, 11), 72-> (1, 12), 73-> (1, 13), 74-> (1, 14), 75-> (1, 15), 76-> (1, 16), 77-> (1, 17), 78-> (1, 18), 79-> (1, 19), 81-> (1, 20), 83-> (1, 21), 84-> (1, 22), 86-> (1, 23), 87-> (1, 24), 88-> (1, 25), 90-> (1, 26), 92-> (1, 27), 93-> (1, 28), 94-> (1, 29), 95-> (1, 30), 96-> (1, 31), 97-> (1, 32), 98-> (1, 33), 99-> (1, 34), 100-> (1, 35), 101-> (1, 36), 102-> (1, 37), 103-> (1, 38), 104-> (1, 39), 105-> (1, 40), 106-> (1, 41), 107-> (1, 42), 108-> (1, 43), 109-> (1, 44), 110-> (1, 45), 111-> (1, 46), 112-> (1, 47), 113-> (1, 48), 114-> (1, 49), 115-> (1, 50), 116-> (1, 51), 117-> (1, 52), 118-> (1, 53), 119-> (1, 54))  ::  MMap(60-> (0, 0), 61-> (0, 1), 62-> (0, 2), 63-> (0, 3), 64-> (0, 4), 65-> (0, 5), 66-> (0, 6), 67-> (0, 7), 68-> (0, 8), 69-> (0, 9), 70-> (0, 10), 71-> (0, 11), 72-> (0, 12), 73-> (0, 13), 74-> (0, 14), 75-> (0, 15), 76-> (0, 16), 77-> (0, 17), 78-> (0, 18), 79-> (0, 19), 80-> (0, 20), 81-> (0, 21), 82-> (0, 22), 83-> (0, 23), 84-> (0, 24), 85-> (0, 25), 86-> (0, 26), 87-> (0, 27), 88-> (0, 28), 89-> (0, 29), 90-> (0, 30), 91-> (0, 31), 92-> (0, 32), 93-> (0, 33), 94-> (0, 34), 95-> (0, 35), 96-> (0, 36), 97-> (0, 37), 98-> (0, 38), 99-> (0, 39), 100-> (0, 40), 101-> (0, 41), 102-> (0, 42), 103-> (0, 43), 104-> (0, 44), 105-> (0, 45), 106-> (0, 46), 107-> (0, 47), 108-> (0, 48), 109-> (0, 49), 110-> (0, 50), 111-> (0, 51), 112-> (0, 52), 113-> (0, 53), 114-> (0, 54), 115-> (0, 55), 116-> (0, 56), 117-> (0, 57), 118-> (0, 58), 119-> (0, 59))  ::  MMap(0-> (0, 0), 1-> (0, 1), 2-> (0, 2), 3-> (0, 3), 4-> (0, 4), 5-> (0, 5), 6-> (0, 6), 7-> (0, 7), 8-> (0, 8), 9-> (0, 9), 10-> (0, 10), 11-> (0, 11), 12-> (0, 12), 13-> (0, 13), 14-> (0, 14), 15-> (0, 15), 16-> (0, 16), 17-> (0, 17), 18-> (0, 18), 19-> (0, 19), 20-> (0, 20), 21-> (0, 21), 22-> (0, 22), 23-> (0, 23), 24-> (0, 24), 25-> (0, 25), 26-> (0, 26), 27-> (0, 27), 28-> (0, 28), 29-> (0, 29), 30-> (0, 30), 31-> (0, 31), 32-> (0, 32), 33-> (0, 33), 34-> (0, 34), 35-> (0, 35), 36-> (0, 36), 37-> (0, 37), 38-> (0, 38), 39-> (0, 39), 40-> (0, 40), 41-> (0, 41), 42-> (0, 42), 43-> (0, 43), 44-> (0, 44), 45-> (0, 45), 46-> (0, 46), 47-> (0, 47), 48-> (0, 48), 49-> (0, 49), 50-> (0, 50), 51-> (0, 51), 52-> (0, 52), 53-> (0, 53), 54-> (0, 54), 55-> (0, 55), 56-> (0, 56), 58-> (0, 57), 59-> (0, 58), 60-> (1, 0), 61-> (1, 1), 62-> (1, 2), 63-> (1, 3), 64-> (1, 4), 65-> (1, 5), 66-> (1, 6), 67-> (1, 7), 68-> (1, 8), 69-> (1, 9), 70-> (1, 10), 71-> (1, 11), 72-> (1, 12), 74-> (1, 13), 75-> (1, 14), 76-> (1, 15), 78-> (1, 16), 79-> (1, 17), 80-> (1, 18), 81-> (1, 19), 82-> (1, 20), 83-> (1, 21), 84-> (1, 22), 85-> (1, 23), 86-> (1, 24), 87-> (1, 25), 88-> (1, 26), 89-> (1, 27), 90-> (1, 28), 91-> (1, 29), 92-> (1, 30), 93-> (1, 31), 94-> (1, 32), 95-> (1, 33), 96-> (1, 34), 97-> (1, 35), 98-> (1, 36), 99-> (1, 37), 100-> (1, 38), 101-> (1, 39), 102-> (1, 40), 103-> (1, 41), 104-> (1, 42), 106-> (1, 43), 107-> (1, 44), 108-> (1, 45), 109-> (1, 46), 110-> (1, 47), 111-> (1, 48), 112-> (1, 49), 113-> (1, 50), 114-> (1, 51), 115-> (1, 52), 117-> (1, 53), 118-> (1, 54), 119-> (1, 55), 120-> (2, 0), 121-> (2, 1), 122-> (2, 2), 123-> (2, 3), 124-> (2, 4), 125-> (2, 5), 126-> (2, 6), 127-> (2, 7), 128-> (2, 8), 129-> (2, 9), 130-> (2, 10), 131-> (2, 11), 132-> (2, 12), 133-> (2, 13), 134-> (2, 14), 135-> (2, 15), 136-> (2, 16), 137-> (2, 17), 138-> (2, 18), 139-> (2, 19), 140-> (2, 20), 141-> (2, 21), 142-> (2, 22), 143-> (2, 23), 144-> (2, 24), 145-> (2, 25), 146-> (2, 26), 147-> (2, 27), 148-> (2, 28), 149-> (2, 29), 150-> (2, 30), 151-> (2, 31), 152-> (2, 32), 153-> (2, 33), 154-> (2, 34), 155-> (2, 35), 156-> (2, 36), 157-> (2, 37), 158-> (2, 38), 159-> (2, 39), 160-> (2, 40), 161-> (2, 41), 162-> (2, 42), 163-> (2, 43), 164-> (2, 44), 165-> (2, 45), 166-> (2, 46), 167-> (2, 47), 168-> (2, 48), 169-> (2, 49)) :: Nil
		val gltc = MMap(0-> (0, 0), 1-> (0, 1), 2-> (0, 2), 3-> (0, 3), 4-> (0, 4), 5-> (0, 5), 6-> (0, 6), 7-> (0, 7), 8-> (0, 8), 9-> (0, 9), 10-> (0, 10), 11-> (0, 11), 12-> (0, 12), 13-> (0, 13), 14-> (0, 14), 15-> (0, 15), 16-> (0, 16), 17-> (0, 17), 18-> (0, 18), 19-> (0, 19), 20-> (0, 20), 21-> (0, 21), 22-> (0, 22), 23-> (0, 23), 24-> (0, 24), 25-> (0, 25), 26-> (0, 26), 27-> (0, 27), 28-> (0, 28), 29-> (0, 29), 30-> (0, 30), 31-> (0, 31), 32-> (0, 32), 33-> (0, 33), 34-> (0, 34), 35-> (0, 35), 36-> (0, 36), 37-> (0, 37), 38-> (0, 38), 39-> (0, 39), 40-> (0, 40), 41-> (0, 41), 42-> (0, 42), 43-> (0, 43), 44-> (0, 44), 45-> (0, 45), 46-> (0, 46), 47-> (0, 47), 48-> (0, 48), 49-> (0, 49), 50-> (0, 50), 51-> (0, 51), 52-> (0, 52), 53-> (0, 53), 54-> (0, 54), 55-> (0, 55), 56-> (0, 56), 57-> (0, 57), 58-> (0, 58), 59-> (0, 59)) :: MMap(0-> (0, 0), 1-> (0, 1), 2-> (0, 2), 3-> (0, 3), 4-> (0, 4), 5-> (0, 5), 6-> (0, 6), 7-> (0, 7), 8-> (0, 8), 9-> (0, 9), 10-> (0, 10), 11-> (0, 11), 12-> (0, 12), 13-> (0, 13), 14-> (0, 14), 15-> (0, 15), 16-> (0, 16), 17-> (0, 17), 18-> (0, 18), 19-> (0, 19), 20-> (0, 20), 21-> (0, 21), 22-> (0, 22), 23-> (0, 23), 24-> (0, 24), 25-> (0, 25), 26-> (0, 26), 27-> (0, 27), 28-> (0, 28), 29-> (0, 29), 30-> (0, 30), 31-> (0, 31), 32-> (0, 32), 33-> (0, 33), 34-> (0, 34), 35-> (0, 35), 36-> (0, 36), 37-> (0, 37), 38-> (0, 38), 39-> (0, 39), 40-> (0, 40), 41-> (0, 41), 42-> (0, 42), 43-> (0, 43), 44-> (0, 44), 45-> (0, 45), 46-> (0, 46), 47-> (0, 47), 48-> (0, 48), 49-> (0, 49), 50-> (0, 50), 51-> (0, 51), 52-> (0, 52), 53-> (0, 53), 54-> (0, 54), 55-> (0, 55), 56-> (0, 56), 57-> (0, 57), 58-> (0, 58), 59-> (0, 59), 60-> (1, 0), 61-> (1, 1), 62-> (1, 2), 63-> (1, 3), 64-> (1, 4), 65-> (1, 5), 66-> (1, 6), 67-> (1, 7), 68-> (1, 8), 69-> (1, 9), 70-> (1, 10), 71-> (1, 11), 72-> (1, 12), 73-> (1, 13), 74-> (1, 14), 75-> (1, 15), 76-> (1, 16), 77-> (1, 17), 78-> (1, 18), 79-> (1, 19), 80-> (1, 20), 81-> (1, 21), 82-> (1, 22), 83-> (1, 23), 84-> (1, 24), 85-> (1, 25), 86-> (1, 26), 87-> (1, 27), 88-> (1, 28), 89-> (1, 29), 90-> (1, 30), 91-> (1, 31), 92-> (1, 32), 93-> (1, 33), 94-> (1, 34), 95-> (1, 35), 96-> (1, 36), 97-> (1, 37), 98-> (1, 38), 99-> (1, 39), 100-> (1, 40), 101-> (1, 41), 102-> (1, 42), 103-> (1, 43), 104-> (1, 44), 105-> (1, 45), 106-> (1, 46), 107-> (1, 47), 108-> (1, 48), 109-> (1, 49), 110-> (1, 50), 111-> (1, 51), 112-> (1, 52), 113-> (1, 53), 114-> (1, 54), 115-> (1, 55), 116-> (1, 56), 117-> (1, 57), 118-> (1, 58), 119-> (1, 59)) :: MMap(60-> (0, 0), 61-> (0, 1), 62-> (0, 2), 63-> (0, 3), 64-> (0, 4), 65-> (0, 5), 66-> (0, 6), 67-> (0, 7), 68-> (0, 8), 69-> (0, 9), 70-> (0, 10), 71-> (0, 11), 72-> (0, 12), 73-> (0, 13), 74-> (0, 14), 75-> (0, 15), 76-> (0, 16), 77-> (0, 17), 78-> (0, 18), 79-> (0, 19), 80-> (0, 20), 81-> (0, 21), 82-> (0, 22), 83-> (0, 23), 84-> (0, 24), 85-> (0, 25), 86-> (0, 26), 87-> (0, 27), 88-> (0, 28), 89-> (0, 29), 90-> (0, 30), 91-> (0, 31), 92-> (0, 32), 93-> (0, 33), 94-> (0, 34), 95-> (0, 35), 96-> (0, 36), 97-> (0, 37), 98-> (0, 38), 99-> (0, 39), 100-> (0, 40), 101-> (0, 41), 102-> (0, 42), 103-> (0, 43), 104-> (0, 44), 105-> (0, 45), 106-> (0, 46), 107-> (0, 47), 108-> (0, 48), 109-> (0, 49), 110-> (0, 50), 111-> (0, 51), 112-> (0, 52), 113-> (0, 53), 114-> (0, 54), 115-> (0, 55), 116-> (0, 56), 117-> (0, 57), 118-> (0, 58), 119-> (0, 59)) :: MMap(0-> (0, 0), 1-> (0, 1), 2-> (0, 2), 3-> (0, 3), 4-> (0, 4), 5-> (0, 5), 6-> (0, 6), 7-> (0, 7), 8-> (0, 8), 9-> (0, 9), 10-> (0, 10), 11-> (0, 11), 12-> (0, 12), 13-> (0, 13), 14-> (0, 14), 15-> (0, 15), 16-> (0, 16), 17-> (0, 17), 18-> (0, 18), 19-> (0, 19), 20-> (0, 20), 21-> (0, 21), 22-> (0, 22), 23-> (0, 23), 24-> (0, 24), 25-> (0, 25), 26-> (0, 26), 27-> (0, 27), 28-> (0, 28), 29-> (0, 29), 30-> (0, 30), 31-> (0, 31), 32-> (0, 32), 33-> (0, 33), 34-> (0, 34), 35-> (0, 35), 36-> (0, 36), 37-> (0, 37), 38-> (0, 38), 39-> (0, 39), 40-> (0, 40), 41-> (0, 41), 42-> (0, 42), 43-> (0, 43), 44-> (0, 44), 45-> (0, 45), 46-> (0, 46), 47-> (0, 47), 48-> (0, 48), 49-> (0, 49), 50-> (0, 50), 51-> (0, 51), 52-> (0, 52), 53-> (0, 53), 54-> (0, 54), 55-> (0, 55), 56-> (0, 56), 57-> (0, 57), 58-> (0, 58), 59-> (0, 59), 60-> (1, 0), 61-> (1, 1), 62-> (1, 2), 63-> (1, 3), 64-> (1, 4), 65-> (1, 5), 66-> (1, 6), 67-> (1, 7), 68-> (1, 8), 69-> (1, 9), 70-> (1, 10), 71-> (1, 11), 72-> (1, 12), 73-> (1, 13), 74-> (1, 14), 75-> (1, 15), 76-> (1, 16), 77-> (1, 17), 78-> (1, 18), 79-> (1, 19), 80-> (1, 20), 81-> (1, 21), 82-> (1, 22), 83-> (1, 23), 84-> (1, 24), 85-> (1, 25), 86-> (1, 26), 87-> (1, 27), 88-> (1, 28), 89-> (1, 29), 90-> (1, 30), 91-> (1, 31), 92-> (1, 32), 93-> (1, 33), 94-> (1, 34), 95-> (1, 35), 96-> (1, 36), 97-> (1, 37), 98-> (1, 38), 99-> (1, 39), 100-> (1, 40), 101-> (1, 41), 102-> (1, 42), 103-> (1, 43), 104-> (1, 44), 105-> (1, 45), 106-> (1, 46), 107-> (1, 47), 108-> (1, 48), 109-> (1, 49), 110-> (1, 50), 111-> (1, 51), 112-> (1, 52), 113-> (1, 53), 114-> (1, 54), 115-> (1, 55), 116-> (1, 56), 117-> (1, 57), 118-> (1, 58), 119-> (1, 59), 120-> (2, 0), 121-> (2, 1), 122-> (2, 2), 123-> (2, 3), 124-> (2, 4), 125-> (2, 5), 126-> (2, 6), 127-> (2, 7), 128-> (2, 8), 129-> (2, 9), 130-> (2, 10), 131-> (2, 11), 132-> (2, 12), 133-> (2, 13), 134-> (2, 14), 135-> (2, 15), 136-> (2, 16), 137-> (2, 17), 138-> (2, 18), 139-> (2, 19), 140-> (2, 20), 141-> (2, 21), 142-> (2, 22), 143-> (2, 23), 144-> (2, 24), 145-> (2, 25), 146-> (2, 26), 147-> (2, 27), 148-> (2, 28), 149-> (2, 29), 150-> (2, 30), 151-> (2, 31), 152-> (2, 32), 153-> (2, 33), 154-> (2, 34), 155-> (2, 35), 156-> (2, 36), 157-> (2, 37), 158-> (2, 38), 159-> (2, 39), 160-> (2, 40), 161-> (2, 41), 162-> (2, 42), 163-> (2, 43), 164-> (2, 44), 165-> (2, 45), 166-> (2, 46), 167-> (2, 47), 168-> (2, 48), 169-> (2, 49)) :: Nil
		val lgtn = MMap((0, 27)-> 27, (0, 53)-> 55, (0, 47)-> 47, (0, 20)-> 20, (0, 14)-> 14, (0, 7)-> 7, (0, 49)-> 51, (0, 43)-> 43, (0, 16)-> 16, (0, 10)-> 10, (0, 36)-> 36, (0, 3)-> 3, (0, 28)-> 28, (0, 54)-> 56, (0, 32)-> 32, (0, 21)-> 21, (0, 15)-> 15, (0, 24)-> 24, (0, 50)-> 52, (0, 44)-> 44, (0, 17)-> 17, (0, 11)-> 11, (0, 37)-> 37, (0, 4)-> 4, (0, 40)-> 40, (0, 29)-> 29, (0, 55)-> 58, (0, 33)-> 33, (0, 22)-> 22, (0, 0)-> 0, (0, 25)-> 25, (0, 51)-> 53, (0, 45)-> 45, (0, 18)-> 18, (0, 12)-> 12, (0, 38)-> 38, (0, 5)-> 5, (0, 41)-> 41, (0, 30)-> 30, (0, 8)-> 8, (0, 34)-> 34, (0, 23)-> 23, (0, 1)-> 1, (0, 26)-> 26, (0, 52)-> 54, (0, 46)-> 46, (0, 19)-> 19, (0, 13)-> 13, (0, 39)-> 39, (0, 6)-> 6, (0, 48)-> 49, (0, 42)-> 42, (0, 31)-> 31, (0, 9)-> 9, (0, 35)-> 35, (0, 2)-> 2) :: MMap((1, 34)-> 99, (0, 20)-> 21, (1, 17)-> 77, (0, 7)-> 7, (1, 6)-> 66, (0, 10)-> 10, (1, 11)-> 71, (0, 32)-> 36, (1, 45)-> 110, (0, 17)-> 18, (1, 28)-> 93, (0, 4)-> 4, (1, 1)-> 61, (1, 54)-> 119, (0, 45)-> 50, (1, 40)-> 105, (0, 30)-> 33, (1, 31)-> 96, (0, 1)-> 1, (1, 12)-> 72, (0, 52)-> 57, (1, 49)-> 114, (0, 39)-> 44, (1, 38)-> 103, (0, 42)-> 47, (1, 43)-> 108, (1, 21)-> 83, (0, 27)-> 29, (1, 26)-> 90, (0, 14)-> 14, (1, 15)-> 75, (0, 49)-> 54, (0, 36)-> 40, (1, 33)-> 98, (0, 21)-> 22, (1, 16)-> 76, (0, 24)-> 26, (1, 5)-> 65, (0, 11)-> 11, (1, 10)-> 70, (0, 33)-> 37, (1, 44)-> 109, (0, 18)-> 19, (1, 19)-> 79, (0, 5)-> 5, (1, 0)-> 60, (0, 8)-> 8, (1, 53)-> 118, (0, 46)-> 51, (1, 47)-> 112, (0, 31)-> 35, (1, 30)-> 95, (0, 2)-> 2, (1, 3)-> 63, (0, 53)-> 58, (1, 48)-> 113, (1, 37)-> 102, (0, 43)-> 48, (1, 42)-> 107, (1, 20)-> 81, (0, 28)-> 30, (1, 25)-> 88, (0, 15)-> 15, (1, 14)-> 74, (0, 50)-> 55, (1, 51)-> 116, (0, 37)-> 42, (1, 32)-> 97, (0, 40)-> 45, (0, 22)-> 23, (1, 23)-> 86, (0, 25)-> 27, (1, 4)-> 64, (0, 12)-> 12, (1, 9)-> 69, (0, 34)-> 38, (1, 35)-> 100, (0, 19)-> 20, (1, 18)-> 78, (0, 6)-> 6, (1, 7)-> 67, (0, 9)-> 9, (1, 52)-> 117, (0, 47)-> 52, (1, 46)-> 111, (0, 16)-> 16, (1, 29)-> 94, (0, 3)-> 3, (1, 2)-> 62, (0, 54)-> 59, (1, 36)-> 101, (0, 44)-> 49, (1, 41)-> 106, (0, 29)-> 31, (1, 24)-> 87, (0, 0)-> 0, (1, 13)-> 73, (0, 51)-> 56, (1, 50)-> 115, (0, 38)-> 43, (1, 39)-> 104, (0, 41)-> 46, (0, 23)-> 24, (1, 22)-> 84, (0, 26)-> 28, (1, 27)-> 92, (0, 13)-> 13, (1, 8)-> 68, (0, 48)-> 53, (0, 35)-> 39) :: MMap((0, 27)-> 87, (0, 53)-> 113, (0, 47)-> 107, (0, 20)-> 80, (0, 14)-> 74, (0, 56)-> 116, (0, 7)-> 67, (0, 49)-> 109, (0, 43)-> 103, (0, 16)-> 76, (0, 10)-> 70, (0, 36)-> 96, (0, 3)-> 63, (0, 28)-> 88, (0, 54)-> 114, (0, 32)-> 92, (0, 21)-> 81, (0, 15)-> 75, (0, 57)-> 117, (0, 24)-> 84, (0, 50)-> 110, (0, 44)-> 104, (0, 17)-> 77, (0, 11)-> 71, (0, 37)-> 97, (0, 4)-> 64, (0, 40)-> 100, (0, 29)-> 89, (0, 55)-> 115, (0, 33)-> 93, (0, 22)-> 82, (0, 0)-> 60, (0, 58)-> 118, (0, 25)-> 85, (0, 51)-> 111, (0, 45)-> 105, (0, 18)-> 78, (0, 12)-> 72, (0, 38)-> 98, (0, 5)-> 65, (0, 41)-> 101, (0, 30)-> 90, (0, 8)-> 68, (0, 34)-> 94, (0, 23)-> 83, (0, 1)-> 61, (0, 59)-> 119, (0, 26)-> 86, (0, 52)-> 112, (0, 46)-> 106, (0, 19)-> 79, (0, 13)-> 73, (0, 39)-> 99, (0, 6)-> 66, (0, 48)-> 108, (0, 42)-> 102, (0, 31)-> 91, (0, 9)-> 69, (0, 35)-> 95, (0, 2)-> 62) :: MMap((1, 34)-> 96, (2, 41)-> 161, (0, 20)-> 20, (1, 17)-> 79, (0, 7)-> 7, (2, 22)-> 142, (1, 6)-> 66, (0, 10)-> 10, (2, 5)-> 125, (1, 11)-> 71, (2, 48)-> 168, (0, 32)-> 32, (1, 45)-> 108, (2, 42)-> 162, (0, 17)-> 17, (1, 28)-> 90, (0, 4)-> 4, (2, 27)-> 147, (1, 1)-> 61, (0, 55)-> 55, (2, 6)-> 126, (1, 54)-> 118, (0, 58)-> 59, (0, 45)-> 45, (2, 32)-> 152, (1, 40)-> 102, (2, 47)-> 167, (0, 30)-> 30, (2, 17)-> 137, (1, 31)-> 93, (0, 1)-> 1, (2, 28)-> 148, (1, 12)-> 72, (0, 52)-> 52, (2, 11)-> 131, (1, 49)-> 112, (0, 39)-> 39, (1, 38)-> 100, (0, 42)-> 42, (2, 37)-> 157, (1, 43)-> 106, (1, 21)-> 83, (0, 27)-> 27, (2, 18)-> 138, (1, 26)-> 88, (0, 14)-> 14, (2, 1)-> 121, (1, 15)-> 76, (0, 49)-> 49, (2, 12)-> 132, (0, 36)-> 36, (1, 33)-> 95, (2, 38)-> 158, (0, 21)-> 21, (1, 16)-> 78, (0, 24)-> 24, (2, 23)-> 143, (1, 5)-> 65, (0, 11)-> 11, (2, 2)-> 122, (1, 10)-> 70, (2, 49)-> 169, (0, 33)-> 33, (1, 44)-> 107, (2, 43)-> 163, (0, 18)-> 18, (1, 19)-> 81, (0, 5)-> 5, (2, 24)-> 144, (1, 0)-> 60, (0, 8)-> 8, (2, 7)-> 127, (1, 53)-> 117, (0, 46)-> 46, (2, 33)-> 153, (1, 47)-> 110, (2, 44)-> 164, (0, 31)-> 31, (1, 30)-> 92, (0, 2)-> 2, (2, 29)-> 149, (1, 3)-> 63, (0, 53)-> 53, (2, 8)-> 128, (1, 48)-> 111, (0, 56)-> 56, (1, 37)-> 99, (0, 43)-> 43, (2, 34)-> 154, (1, 42)-> 104, (1, 20)-> 82, (0, 28)-> 28, (2, 19)-> 139, (1, 25)-> 87, (0, 15)-> 15, (2, 30)-> 150, (1, 14)-> 75, (0, 50)-> 50, (2, 13)-> 133, (1, 51)-> 114, (0, 37)-> 37, (1, 32)-> 94, (0, 40)-> 40, (2, 39)-> 159, (0, 22)-> 22, (1, 23)-> 85, (0, 25)-> 25, (2, 20)-> 140, (1, 4)-> 64, (0, 12)-> 12, (2, 3)-> 123, (1, 9)-> 69, (2, 14)-> 134, (0, 34)-> 34, (1, 35)-> 97, (2, 40)-> 160, (0, 19)-> 19, (1, 18)-> 80, (0, 6)-> 6, (2, 25)-> 145, (1, 7)-> 67, (0, 9)-> 9, (2, 4)-> 124, (1, 52)-> 115, (0, 47)-> 47, (1, 46)-> 109, (2, 45)-> 165, (0, 16)-> 16, (1, 29)-> 91, (0, 3)-> 3, (2, 26)-> 146, (1, 2)-> 62, (0, 54)-> 54, (2, 9)-> 129, (1, 55)-> 119, (0, 57)-> 58, (1, 36)-> 98, (0, 44)-> 44, (2, 35)-> 155, (1, 41)-> 103, (2, 46)-> 166, (0, 29)-> 29, (2, 16)-> 136, (1, 24)-> 86, (0, 0)-> 0, (2, 31)-> 151, (1, 13)-> 74, (0, 51)-> 51, (2, 10)-> 130, (1, 50)-> 113, (0, 38)-> 38, (1, 39)-> 101, (0, 41)-> 41, (2, 36)-> 156, (0, 23)-> 23, (1, 22)-> 84, (0, 26)-> 26, (2, 21)-> 141, (1, 27)-> 89, (0, 13)-> 13, (2, 0)-> 120, (1, 8)-> 68, (0, 48)-> 48, (2, 15)-> 135, (0, 35)-> 35) :: Nil
		val lgtc = MMap((0, 27)-> 27, (0, 53)-> 53, (0, 47)-> 47, (0, 20)-> 20, (0, 14)-> 14, (0, 56)-> 56, (0, 7)-> 7, (0, 49)-> 49, (0, 43)-> 43, (0, 16)-> 16, (0, 10)-> 10, (0, 36)-> 36, (0, 3)-> 3, (0, 28)-> 28, (0, 54)-> 54, (0, 32)-> 32, (0, 21)-> 21, (0, 15)-> 15, (0, 57)-> 57, (0, 24)-> 24, (0, 50)-> 50, (0, 44)-> 44, (0, 17)-> 17, (0, 11)-> 11, (0, 37)-> 37, (0, 4)-> 4, (0, 40)-> 40, (0, 29)-> 29, (0, 55)-> 55, (0, 33)-> 33, (0, 22)-> 22, (0, 0)-> 0, (0, 58)-> 58, (0, 25)-> 25, (0, 51)-> 51, (0, 45)-> 45, (0, 18)-> 18, (0, 12)-> 12, (0, 38)-> 38, (0, 5)-> 5, (0, 41)-> 41, (0, 30)-> 30, (0, 8)-> 8, (0, 34)-> 34, (0, 23)-> 23, (0, 1)-> 1, (0, 59)-> 59, (0, 26)-> 26, (0, 52)-> 52, (0, 46)-> 46, (0, 19)-> 19, (0, 13)-> 13, (0, 39)-> 39, (0, 6)-> 6, (0, 48)-> 48, (0, 42)-> 42, (0, 31)-> 31, (0, 9)-> 9, (0, 35)-> 35, (0, 2)-> 2) :: MMap((1, 34)-> 94, (0, 20)-> 20, (1, 17)-> 77, (0, 7)-> 7, (1, 6)-> 66, (0, 10)-> 10, (1, 11)-> 71, (1, 56)-> 116, (0, 32)-> 32, (1, 45)-> 105, (0, 17)-> 17, (1, 28)-> 88, (0, 4)-> 4, (1, 1)-> 61, (0, 55)-> 55, (1, 54)-> 114, (0, 58)-> 58, (1, 59)-> 119, (0, 45)-> 45, (1, 40)-> 100, (0, 30)-> 30, (1, 31)-> 91, (0, 1)-> 1, (1, 12)-> 72, (0, 52)-> 52, (1, 49)-> 109, (0, 39)-> 39, (1, 38)-> 98, (0, 42)-> 42, (1, 43)-> 103, (1, 21)-> 81, (0, 27)-> 27, (1, 26)-> 86, (0, 14)-> 14, (1, 15)-> 75, (0, 49)-> 49, (0, 36)-> 36, (1, 33)-> 93, (0, 21)-> 21, (1, 16)-> 76, (0, 24)-> 24, (1, 5)-> 65, (0, 11)-> 11, (1, 10)-> 70, (0, 33)-> 33, (1, 44)-> 104, (0, 18)-> 18, (1, 19)-> 79, (0, 5)-> 5, (1, 0)-> 60, (0, 8)-> 8, (1, 53)-> 113, (0, 59)-> 59, (1, 58)-> 118, (0, 46)-> 46, (1, 47)-> 107, (0, 31)-> 31, (1, 30)-> 90, (0, 2)-> 2, (1, 3)-> 63, (0, 53)-> 53, (1, 48)-> 108, (0, 56)-> 56, (1, 37)-> 97, (0, 43)-> 43, (1, 42)-> 102, (1, 20)-> 80, (0, 28)-> 28, (1, 25)-> 85, (0, 15)-> 15, (1, 14)-> 74, (0, 50)-> 50, (1, 51)-> 111, (0, 37)-> 37, (1, 32)-> 92, (0, 40)-> 40, (0, 22)-> 22, (1, 23)-> 83, (0, 25)-> 25, (1, 4)-> 64, (0, 12)-> 12, (1, 9)-> 69, (0, 34)-> 34, (1, 35)-> 95, (0, 19)-> 19, (1, 18)-> 78, (0, 6)-> 6, (1, 7)-> 67, (0, 9)-> 9, (1, 52)-> 112, (1, 57)-> 117, (0, 47)-> 47, (1, 46)-> 106, (0, 16)-> 16, (1, 29)-> 89, (0, 3)-> 3, (1, 2)-> 62, (0, 54)-> 54, (1, 55)-> 115, (0, 57)-> 57, (1, 36)-> 96, (0, 44)-> 44, (1, 41)-> 101, (0, 29)-> 29, (1, 24)-> 84, (0, 0)-> 0, (1, 13)-> 73, (0, 51)-> 51, (1, 50)-> 110, (0, 38)-> 38, (1, 39)-> 99, (0, 41)-> 41, (0, 23)-> 23, (1, 22)-> 82, (0, 26)-> 26, (1, 27)-> 87, (0, 13)-> 13, (1, 8)-> 68, (0, 48)-> 48, (0, 35)-> 35) :: MMap((0, 27)-> 87, (0, 53)-> 113, (0, 47)-> 107, (0, 20)-> 80, (0, 14)-> 74, (0, 56)-> 116, (0, 7)-> 67, (0, 49)-> 109, (0, 43)-> 103, (0, 16)-> 76, (0, 10)-> 70, (0, 36)-> 96, (0, 3)-> 63, (0, 28)-> 88, (0, 54)-> 114, (0, 32)-> 92, (0, 21)-> 81, (0, 15)-> 75, (0, 57)-> 117, (0, 24)-> 84, (0, 50)-> 110, (0, 44)-> 104, (0, 17)-> 77, (0, 11)-> 71, (0, 37)-> 97, (0, 4)-> 64, (0, 40)-> 100, (0, 29)-> 89, (0, 55)-> 115, (0, 33)-> 93, (0, 22)-> 82, (0, 0)-> 60, (0, 58)-> 118, (0, 25)-> 85, (0, 51)-> 111, (0, 45)-> 105, (0, 18)-> 78, (0, 12)-> 72, (0, 38)-> 98, (0, 5)-> 65, (0, 41)-> 101, (0, 30)-> 90, (0, 8)-> 68, (0, 34)-> 94, (0, 23)-> 83, (0, 1)-> 61, (0, 59)-> 119, (0, 26)-> 86, (0, 52)-> 112, (0, 46)-> 106, (0, 19)-> 79, (0, 13)-> 73, (0, 39)-> 99, (0, 6)-> 66, (0, 48)-> 108, (0, 42)-> 102, (0, 31)-> 91, (0, 9)-> 69, (0, 35)-> 95, (0, 2)-> 62) :: MMap((1, 34)-> 94, (2, 41)-> 161, (0, 20)-> 20, (1, 17)-> 77, (0, 7)-> 7, (2, 22)-> 142, (1, 6)-> 66, (0, 10)-> 10, (2, 5)-> 125, (1, 11)-> 71, (2, 48)-> 168, (1, 56)-> 116, (0, 32)-> 32, (1, 45)-> 105, (2, 42)-> 162, (0, 17)-> 17, (1, 28)-> 88, (0, 4)-> 4, (2, 27)-> 147, (1, 1)-> 61, (0, 55)-> 55, (2, 6)-> 126, (1, 54)-> 114, (0, 58)-> 58, (1, 59)-> 119, (0, 45)-> 45, (2, 32)-> 152, (1, 40)-> 100, (2, 47)-> 167, (0, 30)-> 30, (2, 17)-> 137, (1, 31)-> 91, (0, 1)-> 1, (2, 28)-> 148, (1, 12)-> 72, (0, 52)-> 52, (2, 11)-> 131, (1, 49)-> 109, (0, 39)-> 39, (1, 38)-> 98, (0, 42)-> 42, (2, 37)-> 157, (1, 43)-> 103, (1, 21)-> 81, (0, 27)-> 27, (2, 18)-> 138, (1, 26)-> 86, (0, 14)-> 14, (2, 1)-> 121, (1, 15)-> 75, (0, 49)-> 49, (2, 12)-> 132, (0, 36)-> 36, (1, 33)-> 93, (2, 38)-> 158, (0, 21)-> 21, (1, 16)-> 76, (0, 24)-> 24, (2, 23)-> 143, (1, 5)-> 65, (0, 11)-> 11, (2, 2)-> 122, (1, 10)-> 70, (2, 49)-> 169, (0, 33)-> 33, (1, 44)-> 104, (2, 43)-> 163, (0, 18)-> 18, (1, 19)-> 79, (0, 5)-> 5, (2, 24)-> 144, (1, 0)-> 60, (0, 8)-> 8, (2, 7)-> 127, (1, 53)-> 113, (0, 59)-> 59, (1, 58)-> 118, (0, 46)-> 46, (2, 33)-> 153, (1, 47)-> 107, (2, 44)-> 164, (0, 31)-> 31, (1, 30)-> 90, (0, 2)-> 2, (2, 29)-> 149, (1, 3)-> 63, (0, 53)-> 53, (2, 8)-> 128, (1, 48)-> 108, (0, 56)-> 56, (1, 37)-> 97, (0, 43)-> 43, (2, 34)-> 154, (1, 42)-> 102, (1, 20)-> 80, (0, 28)-> 28, (2, 19)-> 139, (1, 25)-> 85, (0, 15)-> 15, (2, 30)-> 150, (1, 14)-> 74, (0, 50)-> 50, (2, 13)-> 133, (1, 51)-> 111, (0, 37)-> 37, (1, 32)-> 92, (0, 40)-> 40, (2, 39)-> 159, (0, 22)-> 22, (1, 23)-> 83, (0, 25)-> 25, (2, 20)-> 140, (1, 4)-> 64, (0, 12)-> 12, (2, 3)-> 123, (1, 9)-> 69, (2, 14)-> 134, (0, 34)-> 34, (1, 35)-> 95, (2, 40)-> 160, (0, 19)-> 19, (1, 18)-> 78, (0, 6)-> 6, (2, 25)-> 145, (1, 7)-> 67, (0, 9)-> 9, (2, 4)-> 124, (1, 52)-> 112, (1, 57)-> 117, (0, 47)-> 47, (1, 46)-> 106, (2, 45)-> 165, (0, 16)-> 16, (1, 29)-> 89, (0, 3)-> 3, (2, 26)-> 146, (1, 2)-> 62, (0, 54)-> 54, (2, 9)-> 129, (1, 55)-> 115, (0, 57)-> 57, (1, 36)-> 96, (0, 44)-> 44, (2, 35)-> 155, (1, 41)-> 101, (2, 46)-> 166, (0, 29)-> 29, (2, 16)-> 136, (1, 24)-> 84, (0, 0)-> 0, (2, 31)-> 151, (1, 13)-> 73, (0, 51)-> 51, (2, 10)-> 130, (1, 50)-> 110, (0, 38)-> 38, (1, 39)-> 99, (0, 41)-> 41, (2, 36)-> 156, (0, 23)-> 23, (1, 22)-> 82, (0, 26)-> 26, (2, 21)-> 141, (1, 27)-> 87, (0, 13)-> 13, (2, 0)-> 120, (1, 8)-> 68, (0, 48)-> 48, (2, 15)-> 135, (0, 35)-> 35) :: Nil
		assert (g.subgraphs.map{_.glt_n} == gltn)
		assert (g.subgraphs.map{_.glt_c} == gltc)
		assert (g.subgraphs.map{_.lgt_n} == lgtn)
		assert (g.subgraphs.map{_.lgt_c} == lgtc)
	}

	test("real_cl") {
		val g = new HGraph(E, lr, nr)
		val real_cl_debet = Seq(Seq(Seq(0), Seq(1), Seq(2), Seq(3), Seq(4), Seq(5), Seq(6), Seq(7), Seq(8), Seq(9), Seq(10), Seq(11), Seq(12), Seq(13), Seq(14), Seq(15), Seq(16), Seq(17), Seq(18), Seq(19), Seq(20), Seq(21), Seq(22), Seq(23), Seq(24), Seq(25), Seq(26), Seq(27), Seq(28), Seq(29), Seq(30), Seq(31), Seq(32), Seq(33), Seq(34), Seq(35), Seq(36), Seq(37), Seq(38), Seq(39), Seq(40), Seq(41), Seq(42), Seq(43), Seq(44), Seq(45), Seq(46), Seq(47), Seq(), Seq(48), Seq(), Seq(49), Seq(50), Seq(51), Seq(52), Seq(53), Seq(54), Seq(), Seq(55), Seq())) :: Seq(Seq(Seq(0), Seq(1), Seq(2), Seq(3), Seq(4), Seq(5), Seq(6), Seq(7), Seq(8), Seq(9), Seq(10), Seq(11), Seq(12), Seq(13), Seq(14), Seq(15), Seq(16), Seq(), Seq(17), Seq(18), Seq(19), Seq(20), Seq(21), Seq(22), Seq(23), Seq(), Seq(24), Seq(25), Seq(26), Seq(27), Seq(28), Seq(29), Seq(), Seq(30), Seq(), Seq(31), Seq(32), Seq(33), Seq(34), Seq(35), Seq(36), Seq(), Seq(37), Seq(38), Seq(39), Seq(40), Seq(41), Seq(42), Seq(43), Seq(44), Seq(45), Seq(46), Seq(47), Seq(48), Seq(49), Seq(50), Seq(51), Seq(52), Seq(53), Seq(54)), Seq(Seq(0), Seq(1), Seq(2), Seq(3), Seq(4), Seq(5), Seq(6), Seq(7), Seq(8), Seq(9), Seq(10), Seq(11), Seq(12), Seq(13), Seq(14), Seq(15), Seq(16), Seq(17), Seq(18), Seq(19), Seq(), Seq(20), Seq(), Seq(21), Seq(22), Seq(), Seq(23), Seq(24), Seq(25), Seq(), Seq(26), Seq(), Seq(27), Seq(28), Seq(29), Seq(30), Seq(31), Seq(32), Seq(33), Seq(34), Seq(35), Seq(36), Seq(37), Seq(38), Seq(39), Seq(40), Seq(41), Seq(42), Seq(43), Seq(44), Seq(45), Seq(46), Seq(47), Seq(48), Seq(49), Seq(50), Seq(51), Seq(52), Seq(53), Seq(54))) :: Seq(Seq(Seq(0), Seq(1), Seq(2), Seq(3), Seq(4), Seq(5), Seq(6), Seq(7), Seq(8), Seq(9), Seq(10), Seq(11), Seq(12), Seq(13), Seq(14), Seq(15), Seq(16), Seq(17), Seq(18), Seq(19), Seq(20), Seq(21), Seq(22), Seq(23), Seq(24), Seq(25), Seq(26), Seq(27), Seq(28), Seq(29), Seq(30), Seq(31), Seq(32), Seq(33), Seq(34), Seq(35), Seq(36), Seq(37), Seq(38), Seq(39), Seq(40), Seq(41), Seq(42), Seq(43), Seq(44), Seq(45), Seq(46), Seq(47), Seq(48), Seq(49), Seq(50), Seq(51), Seq(52), Seq(53), Seq(54), Seq(55), Seq(56), Seq(57), Seq(58), Seq(59))) :: Seq(Seq(Seq(0), Seq(1), Seq(2), Seq(3), Seq(4), Seq(5), Seq(6), Seq(7), Seq(8), Seq(9), Seq(10), Seq(11), Seq(12), Seq(13), Seq(14), Seq(15), Seq(16), Seq(17), Seq(18), Seq(19), Seq(20), Seq(21), Seq(22), Seq(23), Seq(24), Seq(25), Seq(26), Seq(27), Seq(28), Seq(29), Seq(30), Seq(31), Seq(32), Seq(33), Seq(34), Seq(35), Seq(36), Seq(37), Seq(38), Seq(39), Seq(40), Seq(41), Seq(42), Seq(43), Seq(44), Seq(45), Seq(46), Seq(47), Seq(48), Seq(49), Seq(50), Seq(51), Seq(52), Seq(53), Seq(54), Seq(55), Seq(56), Seq(), Seq(57), Seq(58)), Seq(Seq(0), Seq(1), Seq(2), Seq(3), Seq(4), Seq(5), Seq(6), Seq(7), Seq(8), Seq(9), Seq(10), Seq(11), Seq(12), Seq(), Seq(13), Seq(14), Seq(15), Seq(), Seq(16), Seq(17), Seq(18), Seq(19), Seq(20), Seq(21), Seq(22), Seq(23), Seq(24), Seq(25), Seq(26), Seq(27), Seq(28), Seq(29), Seq(30), Seq(31), Seq(32), Seq(33), Seq(34), Seq(35), Seq(36), Seq(37), Seq(38), Seq(39), Seq(40), Seq(41), Seq(42), Seq(), Seq(43), Seq(44), Seq(45), Seq(46), Seq(47), Seq(48), Seq(49), Seq(50), Seq(51), Seq(52), Seq(), Seq(53), Seq(54), Seq(55)), Seq(Seq(0), Seq(1), Seq(2), Seq(3), Seq(4), Seq(5), Seq(6), Seq(7), Seq(8), Seq(9), Seq(10), Seq(11), Seq(12), Seq(13), Seq(14), Seq(15), Seq(16), Seq(17), Seq(18), Seq(19), Seq(20), Seq(21), Seq(22), Seq(23), Seq(24), Seq(25), Seq(26), Seq(27), Seq(28), Seq(29), Seq(30), Seq(31), Seq(32), Seq(33), Seq(34), Seq(35), Seq(36), Seq(37), Seq(38), Seq(39), Seq(40), Seq(41), Seq(42), Seq(43), Seq(44), Seq(45), Seq(46), Seq(47), Seq(48), Seq(49))) :: Nil
		assert(g.subgraphs.map{_.real_cl} == real_cl_debet)
	}

	test("modularity") {
		val g = new HGraph(E, lr, nr)
		assert (g.hetmod == 0.07446394558242718)
	}

	test ("FastUnfolding") {
		val result = FastUnfolding(E, lr, nr)
		// print("\n"*10)
		// printNet(result)
		// print("\n"*10)

		val g = new HGraph(E, lr, nr)
		g.updateC(result)
		// println(g.hetmod)

	}


}